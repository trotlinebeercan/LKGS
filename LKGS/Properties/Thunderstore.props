<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <AssemblyTitle>$(Title)</AssemblyTitle>
        <PackageOutputPath>$(OutputPath)</PackageOutputPath>
        <ThunderPackagingRoot>$(PackageOutputPath)\..\..\</ThunderPackagingRoot>
        <ThunderPackagingPath>$(PackageOutputPath)\..\</ThunderPackagingPath>
    </PropertyGroup>

    <Target Name="_ThunderStoreDependencies" BeforeTargets="_GeneratePluginManifest" AfterTargets="Build">
        <ItemGroup>
            <ThunderDependency Include="BepInEx-BepInExPack-5.4.2100"/>
        </ItemGroup>
    </Target>

    <!-- shoutout to https://github.com/Cryptoc1/lc-plugin-sdk/blob/main/src/Sdk/Sdk.targets for this gem -->
    <Target Name="_GeneratePluginManifest" AfterTargets="Build" Inputs="$(MSBuildAllProjects)" Outputs="$(ThunderPackagingPath)\manifest.json">
        <PropertyGroup>
            <_ThunderDependencies>@(ThunderDependency -> '"%(Filename)%(Extension)"')</_ThunderDependencies>
            <_GeneratedManifestText>
                <![CDATA[{
    "name": "$(Product)",
    "description": "$(Description)",
    "version_number": "$(Version)",
    "website_url": "$(RepositoryUrl)",
    "dependencies": [$(_ThunderDependencies.Replace('%3B', ','))],
    "author": "$(Authors)"
}]]>
            </_GeneratedManifestText>
        </PropertyGroup>

        <WriteLinesToFile Lines="$(_GeneratedManifestText)" File="$(PackageOutputPath)\manifest.json" WriteOnlyWhenDifferent="true" Overwrite="true"/>
    </Target>

    <Target Name="_CopyPluginIcons" AfterTargets="_GeneratePluginManifest" Outputs="$(PackageOutputPath)\logo.png">
        <PropertyGroup>
            <PackageIcon Condition="Exists('$(SolutionDir)logo.png')">$(SolutionDir)logo.png</PackageIcon>
            <PackageIcon Condition="'$(PackageIcon)' == ''">$(DefaultPackageIcon)</PackageIcon>
        </PropertyGroup>
        <Copy SourceFiles="$(PackageIcon)" DestinationFolder="$(PackageOutputPath)"/>
    </Target>

    <ItemGroup>
        <None Include="$(SolutionDir)README.md" CopyToOutputDirectory="Always" Pack="true" PackagePath=""/>
        <None Include="$(SolutionDir)LICENSE" CopyToOutputDirectory="Always" Pack="true" PackagePath=""/>
    </ItemGroup>

    <Target Name="_PackageForThunderStore" AfterTargets="_GeneratePluginManifest;_CopyPluginIcons;_CopyReadme" Outputs="$(ThunderPackagingRoot)\$(PackageId)-$(Version).zip">
        <ZipDirectory SourceDirectory="$(ThunderPackagingPath)" DestinationFile="$(ThunderPackagingRoot)\$(PackageId)-$(Version).zip" Overwrite="true" Condition="Exists('$(ThunderPackagingPath)')"/>
    </Target>
</Project>
